unit eMailChecker1;

interface

uses
  System.SysUtils, System.Types, System.UITypes, System.Classes, System.Variants,
  FMX.Types, FMX.Controls, FMX.Forms, FMX.Graphics, FMX.Dialogs,
  IdBaseComponent, IdComponent, IdTCPConnection, IdTCPClient,
  IdExplicitTLSClientServerBase, IdMessageClient, IdPOP3,
  FMX.Controls.Presentation, FMX.StdCtrls, IdIOHandler, IdIOHandlerSocket,
  IdIOHandlerStack, IdSSL, IdSSLOpenSSL, IdIMAP4, FMX.Edit, FMX.ScrollBox,
  FMX.Memo, IdMessage;

type
  TForm2 = class(TForm)
    IdPOP31: TIdPOP3;
    Button1: TButton;
    Edit1: TEdit;
    Memo1: TMemo;
    IdMessage1: TIdMessage;
    procedure Button1Click(Sender: TObject);
    procedure FormCreate(Sender: TObject);
    procedure FormDestroy(Sender: TObject);
  private
    sl: TstringList;
  public
    { Public declarations }
  end;

var
  Form2: TForm2;

implementation

{$R *.fmx}

procedure TForm2.Button1Click(Sender: TObject);
var _CheckMessages: integer;
     //admin@ereal.com.au
begin
   IdPOP31.Connect;
   _CheckMessages:= IdPOP31.CheckMessages;
   edit1.Text:= IntTOSTr(_CheckMessages);
   IdPOP31.RetrieveHeader(_CheckMessages,IdMessage1);
  // IdPOP31.RetrieveRaw(_CheckMessages,sl);

   memo1.Lines.Add(IdMessage1.Headers.Text);
   IdPOP31.Disconnect;

end;

procedure TForm2.FormCreate(Sender: TObject);
begin
   sl:= TstringList.Create;
end;

procedure TForm2.FormDestroy(Sender: TObject);
begin
   sl.Free;
end;

end.
